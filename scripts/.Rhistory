# # rm(data.alt)
# #
?plot.phylo.extra
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.00001)
setwd("~/New Stuff to add/Lab Stuff/Sex-Autosome-Fusion-master/Sex-Autosome-Fusion-master/mammals.analysis/scripts")
library(ape)
library(dplyr)
library(sfreemap)
#Read tree and chromosome data
data <- read.csv("../data/chromes/mammal_chroms_sim_state.csv",
as.is=T)[,c(5,9,11,12,15)]
tree <- read.tree("../data/trees/4705sp_mean.nwk")
#Scale tree to unit length
tree$edge.length <- tree$edge.length/max(branching.times(tree))
#Remove taxa with uncertain sim states
data <- subset(data,is.na(sim.state) == F)
#Convert species names to right format
data$tree.name <- tolower(data$tree.name)
#Eliminate spaces used to designate subspecies names and replace with underscores
data$tree.name <- gsub(" ","_",data$tree.name)
#Trim phylogeny and chromosome data
data <- data[data$tree.name %in% tree$tip.label, ]
rownames(data) <- 1:nrow(data)
tree <- keep.tip(tree, data$tree.name)
#Identify and remove multiple sim states for taxa (for now, troubleshoot in future)
data.dup <- data[duplicated(data$tree.name),]
#Remove duplicate elements
data.unique <- data[!duplicated(data$tree.name),]
# #Convert to charcter
# data.unique$sim.state <- as.character((data.unique$sim.state))
#Convert data to vector form
data.vector <- c()
for(i in 1:nrow(data.unique)){
data.vector <- c(data.vector,data.unique$sim.state[i])
}
#Set names
names(data.vector) <- data.unique$tree.name
#Reorder to match tip labels
data.vector <- data.vector[order(factor(names(data.vector),
levels = tree$tip.label))]
# # #Establish range of haploid autosome numbers
# # chrmrng <- range(data$hapauto)
# #
# # #Make data frame for sim.states
# # pruned.data <- as.data.frame(matrix(0,
# #                                     length(tree$tip.label),
# #                                     (chrmrng[2]-chrmrng[1] + 1) * 2))
# #
# #
# # row.names(pruned.data) <- tree$tip.label
# #
# # #Fill pruned.data with sim.states
# # for(i in 1:nrow(pruned.data)){
# #   hit <- which(data$tree.name == row.names(pruned.data)[i])
# #   simcoding <- unique(data$sim.state[hit])
# #   weights <- 1/length(simcoding)
# #   pruned.data[i, simcoding] <- weights
# # }
# #
# # #Remove unnecessary objects
# # rm(chrmrng,hit,i,simcoding,weights,data)
#
# #
# # tree.names <- data.frame(tree$tip.label)
# #
# # #Keep only distinct rows
# # data <- data %>%
# #             distinct()
# #
# # #Identify duplicate elements
# # data.dup <- data[duplicated(data$tree.name),]
# #
# # #Remove duplicate elements
# # data.tree <- data[!duplicated(data$tree.name),]
# #
# # #Bind species with duplicate elements to duplicated df
# # for(i in 1:nrow(data.tree)){
# #   if(data.tree$tree.name[i] %in% data.dup$tree.name){
# #     data.dup <- rbind(data.dup,
# #                       data.tree[i,])
# #   }
# # }
# #
# # data.dup$tree.name <- as.factor(data.dup$tree.name)
# #
# # #Use temp df to reorder tip data to match tree order
# # data.alt <- data.tree
# #
# # for(j in 1:length(tree$tip.label)){
# #   index <- which(data.tree$tree.name == tree$tip.label[j])
# #   data.alt[j,] <- data.tree[index,]
# # }
# #
# # data.tree <- data.alt
# #
# # rm(data.alt)
# #
?plot.phylo.extra
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.00001)
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(as.numeric(data.vector), cex = 0.00000000000000000000000000000000001)
?tiplabels
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(as.numeric(data.vector),
cex = 0.00000000000000000000000000000000001,
frame = NULL)
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(as.numeric(data.vector),
cex = 0.00000000000000000000000000000000001,
frame = "circle")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(as.numeric(data.vector),
cex = 0.00000000000000000000000000000000001,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(as.numeric(data.vector),
cex = 0.001,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.001,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 1,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.1,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.01,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.1,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.9,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.09,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.08,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.06,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.051,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.055,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.01,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.02,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.03,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex.label = 0.05,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.049,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.00001)
tiplabels(data.vector,
cex = 0.049,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.0000000001)
plot(tree,show.tip.label = F,edge.width = 0.001)
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.1)
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.1)
tiplabels(data.vector,
cex = 0.04,
frame = "none")
plot(tree,show.tip.label = F,edge.width = 0.1)
tiplabels(data.vector,
cex = 0.045,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.1)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.0000000000000000000000000000001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,edge.width = 0.0000000000000000000000000000001)
tiplabels(data.vector,
cex = 0.01,
frame = "none")
plot(tree,show.tip.label = F,
cex = 0.01,
edge.width = 0.0000000000000000000000000000001)
plot(tree,show.tip.label = F,
cex = 0.01,
edge.width = 0.0000000000000000000000000000001)
tiplabels(data.vector,
cex = 0.01,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,
cex = 0.01,
edge.width = 0.0000000000000000000000000000001)
tiplabels(data.vector,
cex = 0.04,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.vector,
cex = 0.1,
frame = "none")
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.vector,
cex = 0.05,
frame = "none")
View(data)
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.05,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.5,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.01,
frame = "none")
#Plot tree
plot(tree,show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.05,
frame = "none")
View(data.unique)
plot(tree,show.tip.label = T,
edge.width = 0.00000000000001)
plot(tree,show.tip.label = T,
cex=0.01,
edge.width = 0.00000000000001)
plot(tree,show.tip.label = T,
cex=0.1,
edge.width = 0.00000000000001)
plot(tree,show.tip.label = T,
cex=0.05,
edge.width = 0.00000000000001)
#Plot tree
plot(tree,show.tip.label = T,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.06,
frame = "none")
#Plot tree
plot(tree,show.tip.label = T,
cex=0.01,
edge.width = 0.00000000000001)
plot(tree,
cex=0.1,
edge.width = 0.00000000000001)
plot(tree, show.tip.label = F
cex=0.1,
edge.width = 0.00000000000001)
#Plot tree
plot(tree, show.tip.label = F,
cex=0.1,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.06,
frame = "none")
#Plot tree
plot(tree, show.tip.label = F,
cex=0.1,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.01,
frame = "none")
#Plot tree
plot(tree, show.tip.label = F,
cex=0.1,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.04,
frame = "none")
plot(tree, show.tip.label = F,
plot(tree, show.tip.label = F,
#Plot tree
plot(tree, show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.04,
frame = "none")
#Plot tree
plot(tree, show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(data.unique$hapauto,
cex = 0.02,
frame = "none")
data.unique <- data.unique[order(factor(data.unique$tree.name,
levels = tree$tip.label))]
length(data.vector)
paste(data.vector[3] - 48,"n")
data.vector[3] - 48
chrom <- data.vector[3] - 48
chrom
chrom <- paste(chrom,"n")
chrom
as.numeric(data.vector[3] - 48)
chrom <- as.numeric(data.vector[3] - 48)
chrom <- paste(chrom,"n")
chrom
chrom <- as.numeric(data.vector[3] - 48)
chrom <- paste0(chrom,"n")
chrom <- paste0(as.numeric(data.vector[3] - 48),"n")
chrom <- paste0(data.vector[2]+1)
data.vector
names(data.vector[1])
chrom <- paste0(data.vector[1]+1)
tip <- paste0(names(data.vector[1])," ",chrom)
tip <- paste0(names(data.vector[1])," (",chrom,")")
tips <- c()
tips <- c()
for(i in 1:length(data.vector)){
#Check for fused vs unfused
if(data.vector[i] > 49){
chrom <- paste0(as.numeric(data.vector[i] - 48),"n")
} else {
chrom <- paste0(data.vector[i]+1)
}
#Add species name
tip <- paste0(names(data.vector[i])," (",chrom,")")
#Bind to temporary vector
tips <- c(tips,tip)
}
tips
#Remove redundant variables
rm(tip,chrom)
plot(tree, show.tip.label = T,
cex=0.01,
edge.width = 0.00000000000001)
plot(tree, show.tip.label = F,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
frame = "none")
plot(tree, show.tip.label = F,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
adj = -1,
frame = "none")
plot(tree, show.tip.label = F,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
adj = -0.5,
frame = "none")
plot(tree, show.tip.label = F,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
offset = -0.5,
frame = "none")
tiplabels(tips,
cex = 0.02,
offset = 0.5,
frame = "none")
tiplabels(tips,
cex = 0.02,
#offset = 0.5,
frame = "none")
plot(tree, show.tip.label = F,
cex=0.01,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
#offset = 0.5,
frame = "none")
plot(tree, show.tip.label = F,
align.tip.label = T,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
#offset = 0.5,
plot(tree, show.tip.label = F,
align.tip.label = T,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
#offset = 0.5,
frame = "none",)
plot(tree, show.tip.label = F,
edge.width = 0.00000000000001)
tiplabels(tips,
cex = 0.02,
align.tip.label=T,
#offset = 0.5,
frame = "none",)
tree.alt <- tree
tree.alt$tip.label <- tips
View(tree.alt)
plot(tree, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
label.offset = 1
edge.width = 0.00000000000001)
plot(tree, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
label.offset = 1,
edge.width = 0.00000000000001)
plot(tree, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
label.offset = 0.01,
edge.width = 0.00000000000001)
plot(tree.alt, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
label.offset = 0.01,
edge.width = 0.00000000000001)
plot(tree.alt, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
#label.offset = 0.01,
edge.width = 0.00000000000001)
plot(tree.alt, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
no.margin = T
#label.offset = 0.01,
edge.width = 0.00000000000001)
plot(tree.alt, show.tip.label = T,
align.tip.label = T,
cex = 0.02,
no.margin = T,
#label.offset = 0.01,
edge.width = 0.00000000000001)
?plot.phylo
plot(tree.alt, show.tip.label = T,
#align.tip.label = T,
cex = 0.02,
no.margin = T,
#label.offset = 0.01,
edge.width = 0.00000000000001)
View(tree.alt)
cophenetic.phylo(tree.alt)
dist <- as.data.frame(cophenetic.phylo(tree.alt))
View(dist)
bin.range <- c(0.5,1.5)
nbins <- c(10,10)
c(1/seq(from = 1+bin.range[1], to = 1,length.out = nbins[1] + 1),
seq(from = 1, to = bin.range[2], length.out = nbins[2] + 1))
bin[12]/bin[11]
bins <- c(1/seq(from = 1+bin.range[1], to = 1,length.out = nbins[1] + 1),
seq(from = 1, to = bin.range[2], length.out = nbins[2] + 1))
bins[12]/bins[11]
bins[13]/bins[12]
bins[11]/bins[10]
